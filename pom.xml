<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.vivantech</groupId>
	<artifactId>kc_fixes</artifactId>
	<packaging>war</packaging>
	<version>5.2.1-fixes-20150224-SNAPSHOT</version>
	<name>Kuali Coeus with fixes from Vivantech</name>
	<url>http://www.vivantech.com</url>
	
	<properties>
		<kc.liquibase.changeLogFile.update>src/main/db/liquibase/kc_fix_changelog.xml</kc.liquibase.changeLogFile.update>
		<kc.liquibase.url>jdbc:mysql://localhost:3306/kualicoeus?allowMultiQueries=true&amp;jdbcCompliantTruncation=false&amp;createDatabaseIfNotExist=true</kc.liquibase.url>
		<kc.liquibase.username>kualicoeus</kc.liquibase.username>
		<kc.liquibase.password>kualicoeus</kc.liquibase.password>
		
		
		<rice.liquibase.changeLogFile.update>src/main/db/liquibase/kc_fix_rice_changelog.xml</rice.liquibase.changeLogFile.update>
		<rice.liquibase.url>jdbc:mysql://localhost:3306/kualirice?allowMultiQueries=true&amp;jdbcCompliantTruncation=false</rice.liquibase.url>
		<rice.liquibase.username>kualirice</rice.liquibase.username>
		<rice.liquibase.password>kualirice</rice.liquibase.password>
	
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.java.version>1.7</project.java.version>
		<project.compile.source>${project.java.version}</project.compile.source>
		<project.compile.target>${project.java.version}</project.compile.target>
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<build.version>${project.version} :: ${build.timestamp}</build.version>
		
		<kc-project.version>5.2.1</kc-project.version>
		<servlet-api.version>2.5</servlet-api.version>
		
		<maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>2.9</maven-dependency-plugin.version>
		<maven-war-plugin.version>2.4</maven-war-plugin.version>
		
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.kuali.kra</groupId>
			<artifactId>kc_project</artifactId>
			<version>5.2.1</version>
			<type>jar</type>
			<classifier>classes</classifier>
		</dependency>
		<dependency>
			<groupId>org.kuali.kra</groupId>
			<artifactId>kc_project</artifactId>
			<version>5.2.1</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
			<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.16</version>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>META-INF/kc-config-build.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<attachClasses>true</attachClasses>
					<overlays>
						<overlay>
							<!-- empty overlay element is current project placeholder -->
						</overlay>
						<overlay>
							<groupId>org.kuali.kra</groupId>
							<artifactId>kc_project</artifactId>
						</overlay>
					</overlays>
					<!-- Included the kc_project classes jar as a compile-scope dependency 
						so its transitive dependencies remain intact for projects including this 
						one as a dependency. However, having the jar in the lib directory can cause 
						complications for projects using this one in a war overlay. So we can exclude 
						the jar from packaging since its contents are already brought in by the overlay. 
						Note: packagingExcludes removes the artifact from the built war, but it will 
						still be present in the temporary war directory -->
					<packagingExcludes>WEB-INF/lib/kc_project-*-classes.jar</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/lb-tar-gz.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<warSourceDirectory>${project.build.directory}/${project.artifactId}-${project.version}</warSourceDirectory>
					<port>8090</port>
					<path>/kc-dev</path>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.16</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>copy-userhome</id>
			<activation>
				<property>
					<name>developer-init</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${user.home}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/config/userhome</directory>
											<filtering>false</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>load-db</id>
			<activation>
				<property>
					<name>developer-init</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>install</phase>
								<configuration>
									<target name="load-databases">
										<echo message="reloading database vt-kc..." />
										<exec executable="mysql" input="src/main/sql/vt-kc.sql">
										    <arg value="-b"/>
											<arg value="-n"/>
											<arg value="-f"/>
											<arg value="-uvt-kc"/>
											<arg value="-pvt-kc"/>
										</exec>
										<echo message="reloading database vt-kc complete" />
										<echo message="reloading database vt-kr..." />
										<exec executable="mysql" input="src/main/sql/vt-kr.sql">
										    <arg value="-b"/>
											<arg value="-n"/>
											<arg value="-f"/>
											<arg value="-uvt-kr"/>
											<arg value="-pvt-kr"/>
										</exec>
										<echo message="reloading database vt-kr complete" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>rice-server</id>
			<properties>
				<rice.output.dir>${project.build.directory}/rice-server</rice.output.dir>
				<rice.war.file>${rice.output.dir}/rice-standalone.war</rice.war.file>
				<rice.war.dir>${rice.output.dir}/rice-standalone</rice.war.dir>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-rice-war</id>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.kuali.rice</groupId>
											<artifactId>rice-standalone</artifactId>
											<version>2.3.6</version>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${rice.output.dir}</outputDirectory>
										</artifactItem>
									</artifactItems>
									<stripVersion>true</stripVersion>
								</configuration>
							</execution>
							<execution>
								<id>copy-rice-war-unpack</id>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.kuali.rice</groupId>
											<artifactId>rice-standalone</artifactId>
											<version>2.3.6</version>
											<type>war</type>
											<overWrite>true</overWrite>
											<outputDirectory>${rice.war.dir}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.tomcat.maven</groupId>
						<artifactId>tomcat7-maven-plugin</artifactId>
						<version>2.1</version>
						<configuration>
							<port>8080</port>
							<path>/kr-dev</path>
							<warDirectory>${rice.war.file}</warDirectory>
							<warSourceDirectory>${rice.war.dir}</warSourceDirectory>
						</configuration>
						<dependencies>
							<dependency>
								<groupId>mysql</groupId>
								<artifactId>mysql-connector-java</artifactId>
								<version>5.1.16</version>
								<scope>runtime</scope>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>update-kc</id>
			<activation>
				<property>
					<name>developer-init</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>liquibase-update-kc</id>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
								<configuration>
									<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
									<changeLogFile>${kc.liquibase.changeLogFile.update}</changeLogFile>
									<driver>${mysql.driver}</driver>
									<url>${kc.liquibase.url}</url>
									<username>${kc.liquibase.username}</username>
									<password>${kc.liquibase.password}</password>
									<verbose>true</verbose>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>update-rice</id>
			<activation>
				<property>
					<name>developer-init</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>liquibase-update-rice</id>
								<phase>process-resources</phase>
								<goals>
									<goal>update</goal>
								</goals>
								<configuration>
									<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
									<changeLogFile>${rice.liquibase.changeLogFile.update}</changeLogFile>
									<driver>${mysql.driver}</driver>
									<url>${rice.liquibase.url}</url>
									<username>${rice.liquibase.username}</username>
									<password>${rice.liquibase.password}</password>
									<verbose>true</verbose>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>ekualiti-public</id>
			<name>Public Maven Repository for ekualiti(TM) by Vivantech, Inc.</name>
			<url>https://jenkins.dev.ekualiti.com/nexus/content/repositories/public/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>
</project>
